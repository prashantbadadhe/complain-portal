{"remainingRequest":"G:\\projects\\complain-portal\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\complain-portal\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\complain-portal\\node_modules\\tslint-loader\\index.js!G:\\projects\\complain-portal\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts","dependencies":[{"path":"G:\\projects\\complain-portal\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts","mtime":1543222006000},{"path":"G:\\projects\\complain-portal\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"G:\\projects\\complain-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1569703604290},{"path":"G:\\projects\\complain-portal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\projects\\complain-portal\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\projects\\complain-portal\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { Storage } from 'react-jhipster';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nexport var ACTION_TYPES = {\r\n    LOGIN: 'authentication/LOGIN',\r\n    GET_SESSION: 'authentication/GET_SESSION',\r\n    LOGOUT: 'authentication/LOGOUT',\r\n    CLEAR_AUTH: 'authentication/CLEAR_AUTH',\r\n    ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\r\n};\r\nvar AUTH_TOKEN_KEY = 'jhi-authenticationToken';\r\nvar initialState = {\r\n    loading: false,\r\n    isAuthenticated: false,\r\n    loginSuccess: false,\r\n    loginError: false,\r\n    showModalLogin: false,\r\n    account: {},\r\n    errorMessage: null,\r\n    redirectMessage: null,\r\n    sessionHasBeenFetched: false\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.LOGIN):\r\n        case REQUEST(ACTION_TYPES.GET_SESSION):\r\n            return tslib_1.__assign({}, state, { loading: true });\r\n        case FAILURE(ACTION_TYPES.LOGIN):\r\n            return tslib_1.__assign({}, initialState, { errorMessage: action.payload, showModalLogin: true, loginError: true });\r\n        case FAILURE(ACTION_TYPES.GET_SESSION):\r\n            return tslib_1.__assign({}, state, { loading: false, isAuthenticated: false, sessionHasBeenFetched: true, showModalLogin: true, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.LOGIN):\r\n            return tslib_1.__assign({}, state, { loading: false, loginError: false, showModalLogin: false, loginSuccess: true });\r\n        case ACTION_TYPES.LOGOUT:\r\n            return tslib_1.__assign({}, initialState, { showModalLogin: true });\r\n        case SUCCESS(ACTION_TYPES.GET_SESSION): {\r\n            var isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\r\n            return tslib_1.__assign({}, state, { isAuthenticated: isAuthenticated, loading: false, sessionHasBeenFetched: true, account: action.payload.data });\r\n        }\r\n        case ACTION_TYPES.ERROR_MESSAGE:\r\n            return tslib_1.__assign({}, initialState, { showModalLogin: true, redirectMessage: action.message });\r\n        case ACTION_TYPES.CLEAR_AUTH:\r\n            return tslib_1.__assign({}, state, { loading: false, showModalLogin: true, isAuthenticated: false });\r\n        default:\r\n            return state;\r\n    }\r\n});\r\nexport var displayAuthError = function (message) { return ({ type: ACTION_TYPES.ERROR_MESSAGE, message: message }); };\r\nexport var getSession = function () { return function (dispatch, getState) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    return tslib_1.__generator(this, function (_a) {\r\n        dispatch({\r\n            type: ACTION_TYPES.GET_SESSION,\r\n            payload: axios.get('api/account')\r\n        });\r\n        return [2 /*return*/];\r\n    });\r\n}); }; };\r\nexport var login = function (username, password, rememberMe) {\r\n    if (rememberMe === void 0) { rememberMe = false; }\r\n    return function (dispatch, getState) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var result, bearerToken, jwt;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, dispatch({\r\n                        type: ACTION_TYPES.LOGIN,\r\n                        payload: axios.post('api/authenticate', { username: username, password: password, rememberMe: rememberMe })\r\n                    })];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    bearerToken = result.value.headers.authorization;\r\n                    if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\r\n                        jwt = bearerToken.slice(7, bearerToken.length);\r\n                        if (rememberMe) {\r\n                            Storage.local.set(AUTH_TOKEN_KEY, jwt);\r\n                        }\r\n                        else {\r\n                            Storage.session.set(AUTH_TOKEN_KEY, jwt);\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, dispatch(getSession())];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n};\r\nexport var clearAuthToken = function () {\r\n    if (Storage.local.get(AUTH_TOKEN_KEY)) {\r\n        Storage.local.remove(AUTH_TOKEN_KEY);\r\n    }\r\n    if (Storage.session.get(AUTH_TOKEN_KEY)) {\r\n        Storage.session.remove(AUTH_TOKEN_KEY);\r\n    }\r\n};\r\nexport var logout = function () { return function (dispatch) {\r\n    clearAuthToken();\r\n    dispatch({\r\n        type: ACTION_TYPES.LOGOUT\r\n    });\r\n}; };\r\nexport var clearAuthentication = function (messageKey) { return function (dispatch, getState) {\r\n    clearAuthToken();\r\n    dispatch(displayAuthError(messageKey));\r\n    dispatch({\r\n        type: ACTION_TYPES.CLEAR_AUTH\r\n    });\r\n}; };\r\n",{"version":3,"file":"G:\\projects\\complain-portal\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts","sourceRoot":"","sources":["G:\\projects\\complain-portal\\node_modules\\tslint-loader\\index.js!G:\\projects\\complain-portal\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Storage } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  LOGIN: 'authentication/LOGIN',\n  GET_SESSION: 'authentication/GET_SESSION',\n  LOGOUT: 'authentication/LOGOUT',\n  CLEAR_AUTH: 'authentication/CLEAR_AUTH',\n  ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\n};\n\nconst AUTH_TOKEN_KEY = 'jhi-authenticationToken';\n\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  loginSuccess: false,\n  loginError: false, // Errors returned from server side\n  showModalLogin: false,\n  account: {} as any,\n  errorMessage: null as string, // Errors returned from server side\n  redirectMessage: null as string,\n  sessionHasBeenFetched: false\n};\n\nexport type AuthenticationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AuthenticationState = initialState, action): AuthenticationState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.LOGIN):\n    case REQUEST(ACTION_TYPES.GET_SESSION):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.LOGIN):\n      return {\n        ...initialState,\n        errorMessage: action.payload,\n        showModalLogin: true,\n        loginError: true\n      };\n    case FAILURE(ACTION_TYPES.GET_SESSION):\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        sessionHasBeenFetched: true,\n        showModalLogin: true,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.LOGIN):\n      return {\n        ...state,\n        loading: false,\n        loginError: false,\n        showModalLogin: false,\n        loginSuccess: true\n      };\n    case ACTION_TYPES.LOGOUT:\n      return {\n        ...initialState,\n        showModalLogin: true\n      };\n    case SUCCESS(ACTION_TYPES.GET_SESSION): {\n      const isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\n      return {\n        ...state,\n        isAuthenticated,\n        loading: false,\n        sessionHasBeenFetched: true,\n        account: action.payload.data\n      };\n    }\n    case ACTION_TYPES.ERROR_MESSAGE:\n      return {\n        ...initialState,\n        showModalLogin: true,\n        redirectMessage: action.message\n      };\n    case ACTION_TYPES.CLEAR_AUTH:\n      return {\n        ...state,\n        loading: false,\n        showModalLogin: true,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport const displayAuthError = message => ({ type: ACTION_TYPES.ERROR_MESSAGE, message });\n\nexport const getSession = () => async (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.GET_SESSION,\n    payload: axios.get('api/account')\n  });\n};\n\nexport const login = (username, password, rememberMe = false) => async (dispatch, getState) => {\n  const result = await dispatch({\n    type: ACTION_TYPES.LOGIN,\n    payload: axios.post('api/authenticate', { username, password, rememberMe })\n  });\n  const bearerToken = result.value.headers.authorization;\n  if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\n    const jwt = bearerToken.slice(7, bearerToken.length);\n    if (rememberMe) {\n      Storage.local.set(AUTH_TOKEN_KEY, jwt);\n    } else {\n      Storage.session.set(AUTH_TOKEN_KEY, jwt);\n    }\n  }\n  await dispatch(getSession());\n};\n\nexport const clearAuthToken = () => {\n  if (Storage.local.get(AUTH_TOKEN_KEY)) {\n    Storage.local.remove(AUTH_TOKEN_KEY);\n  }\n  if (Storage.session.get(AUTH_TOKEN_KEY)) {\n    Storage.session.remove(AUTH_TOKEN_KEY);\n  }\n};\n\nexport const logout = () => dispatch => {\n  clearAuthToken();\n  dispatch({\n    type: ACTION_TYPES.LOGOUT\n  });\n};\n\nexport const clearAuthentication = messageKey => (dispatch, getState) => {\n  clearAuthToken();\n  dispatch(displayAuthError(messageKey));\n  dispatch({\n    type: ACTION_TYPES.CLEAR_AUTH\n  });\n};\n"]}]}